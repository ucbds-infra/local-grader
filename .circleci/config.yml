version: 2
jobs:
  build:
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - checkout
      - run: 
          name: docker versions
          command: |
            docker version
            docker-compose version

      - run:
          name: install postgres
          command: |
            sudo apt update
            sudo apt install postgresql postgresql-contrib libpq-dev

      - run: 
          name: install and setup conda
          command: |
            wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
            bash miniconda.sh -b -p $HOME/miniconda
            export PATH="$HOME/miniconda/bin:$PATH"
            hash -r
            conda init bash
            conda config --set always_yes yes --set changeps1 no
            conda update -q conda
            conda create -q -n test-env python=3.7
            source activate test-env
            echo "export TAR=/bin/tar" >> $BASH_ENV

      - run:
          name: pull docker images
          command: |
            docker pull gradescope/auto-builds:latest

      - run: 
          name: install Python and R packages
          command: |
            conda env update -f environment.yml -n base
            Rscript -e "devtools::install_github('ucbds-infra/ottr')" || Rscript -e "devtools::install_github('ucbds-infra/ottr')"

      - run:
          name: install nbconvert dependencies
          command: |
            sudo apt update
            sudo apt install -y pandoc
            sudo apt install -y texlive-xetex texlive-fonts-recommended
            sudo apt install fonts-lmodern

      - run:
          name: build testing docker image
          command: |
            make docker-test

      - run: 
          name: docker, conda version info
          command: |
            docker version
            docker-compose version
            conda info -a

      - run:
          name: create postgres user
          command: |
            sudo -u postgres psql -c "create user root createdb password 'root';"

      - run: 
          name: run tests
          command: |
            coverage run -m test

      - run: 
          name: send to codecov
          command: |
            codecov
